.. Auto-generated by help-rst from "mirtk average-dofs -h" output


This command averages a number of input transformations.
It can be used to construct a brain image atlas and has been
utilized for the construction of the spatio-temporal fetal/neonatal
brain atlases available at http://brain-development.org/brain-atlases/.

The transformations which can be averaged by this program are listed below,
commonly expressed as "sum of global and local transformations", i.e.,

.. math::

   T(x) = T_{global}(x) + T_{local}(x)

======  ===============================================================================
Linear  :math:`T(x) = Ax,         T_{global}(x) = A x, T_{local}(x) = 0`
FFD     :math:`T(x) =  x + d(x),  T_{global}(x) = I x, T_{local}(x) = d(x)`
MFFD    :math:`T(x) = Ax + d(x),  T_{global}(x) = A x, T_{local}(x) = d(x)`
Fluid   :math:`T(x) =  x + d(Ax), T_{global}(x) = A x, T_{local}(x) = d(Ax) - (Ax - x)`
======  ===============================================================================

where A is a linear 4x4 transformation matrix, and d(x) is a non-linear displacement.
Note that in case of the fluid transformation, d(x) is the total displacement
instead of the local displacement only. By subtracting the displacement induced
by the global transformation, the displacement corresponding to the local
deformation only is obtained. Note that in case of MFFDs, the total displacement
introduced by all local transformation levels is used to compute the average local
transformation and thus multiple levels are allowed. Representing all transformations
as sum of global and local transformations enables the computation of an average
transformation for a given target domain from an arbitrary mix of input transformations.

Accordingly, the resulting average transformation is set to be equal the sum of the
Log-Euclidean means of the global transformation matrices, A, of the input transformations
and the corresponding local transformations. The bi-invariant global mean is computed
instead using the barycentric fixed point iteration when :option:`average-dofs -bi-invariant` is given.
Before the computation of the local mean transformation, any dependency of the local
displacement on the global component is removed by pre-multiplying the displacement
vectors by the inverse matrix of the global transformation [1]_. Moreover, the (optional)
local component of the final average transformation has to be taken into consideration
as well. Therefore, all local input displacements are made relative to the same position
after global transformation, i.e.,

.. math::

   d(x) = \bar{A} \circ A^{-1} \circ T_{local}(x)

The average of all transformation parameters is computed in the "log-space" by default.
Thus, in case of the local displacement fields, d(x), the corresponding stationary
velocity fields, :math:`v(x) = log(d(x))`, are averaged instead. If the input transformation
itself is parameterized by stationary velocities, these velocities are used directly
when possible to avoid the redundant :math:`log(exp)` computation and its numerical error.
The resulting average velocity field is then either combined with a suitable
velocity-based transformation model or exponentiated again to obtain the final
average displacement field, :math:`\bar{d}(x)`.

The output transformation will be an affine transformation if only the global transformation
parameters were averaged, or a MFFD with one level corresponding to the average FFD otherwise.
The type of the output FFD depends on the type of the input transformations. If all transformations
are either a linear transformation or a FFD with cubic B-spline or linear interpolation kernel
(may also be contained in a one-level MFFD), the ouput FFD will contain the average parameters
of the input FFDs. If the average is computed in the log-space, this only applies if all input
FFDs are parameterized by stationary velocity fields. In all other cases, the output FFD will
be either defined in the image domain of the input target image or the first encountered input
FFD with a linear interpolation kernel and a control point spacing corresponding to the voxel size.
In other words, the output FFD is in general a dense ("non-parametric") displacement field.

.. [1] Rueckert et al., Automatic construction of 3-D statistical deformation
       models of the brain using nonrigid registration, IEEE TMI, 22(8), 1014-25 (2003)
